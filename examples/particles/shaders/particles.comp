#version 450

#define PARTICLE_CNT 3
#define COLLIDER_CNT 10

struct Particle {
	vec3 pos;
	vec3 vel;
	float size;
	float age;
};

struct AACube {
	vec3 min;
	vec3 max;
};

struct Sphere {
	vec3 origin;
	float radius;
};

struct Colliders {
	uint cubeCount;
	uint sphereCount;
	AACube cubes[COLLIDER_CNT];
	Sphere spheres[COLLIDER_CNT];
};

struct ParticleSystem{
	vec3 origin;
	float spawnRadius;
	float spawnRate;
	vec3 initialVelocity;
	vec3 gravity;
	float particleSize;
	float particleLifetime;
};

layout (local_size_x = 1, local_size_y = 1) in;

layout(set = 0, binding = 0) buffer Particles {
	Particle p[];
} particles;

layout (set = 0, binding = 1) uniform Metadata {
	float deltaTime;
	float runTime;
	//ParticleSystem systemProperties;
	//Colliders colliders;
} metadata;

void main() {
	float rt = metadata.runTime;
	vec3 offset = vec3(cos(rt), sin(rt), 0.) * 0.1;

	particles.p[0].pos = vec3(-0.5, -0.5, 0.0) + offset;
	particles.p[0].vel = vec3(0.);
	particles.p[0].size = 0.5;
	particles.p[0].age = 0.5;
	
	particles.p[1].pos = vec3(-0.5, 0.5, 0.0) + offset;
	particles.p[1].vel = vec3(0.);
	particles.p[1].size = 0.5;
	particles.p[1].age = 0.5;
	
	particles.p[2].pos = vec3(0.5, -0.5, 0.0) + offset;
	particles.p[2].vel = vec3(0.);
	particles.p[2].size = 0.5;
	particles.p[2].age = 0.5;
}